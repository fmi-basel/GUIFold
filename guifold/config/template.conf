[QUEUE]
### All of QUEUE settings are only required for job submission to queuing systems.
#Command to submit batch jobs to queuing system
queue_submit = sbatch
#Command to cancel jobs
queue_cancel = scancel
#Optional: If the queuing systems requires user account. Can be changed later by the user in the GUI settings.
#If no user account is needed the below value can be left unchanged and will be ignored as long as the variable
#is not used in the submission script template.
queue_account = userxyz
#Path to the submission script template
submission_script_template_path = None
#Optional: Split job into CPU (features) and GPU (prediction) parts (two submissions to CPU or GPU queues).
#This requires addition of a dependency block in the submission template (see SLURM submission template example).
split_job=False
#Python regex to extract JobID from output of queue submit command. Example regex is for SLURM sbatch.
queue_jobid_regex = \D*(\d+)\D*
#Minimum number of CPUs (this will be used for standard feature pipeline with hhblits and jackhmmer)
min_cpus = 20
#Maximum number of CPUs (this will be used for mmseqs pipeline)
max_cpus = 80
#Minimum RAM in GB to reserve.
min_ram = 60
#Maximum available RAM (GB) in GB on cluster.
max_ram = 800
#Maximum available GPU memory (on a single card) in GB.
max_gpu_ram = 80
#Check control box "Queue" in the main GUI window by default.
queue_default = True

[DATABASES]
#Path to databases and model weights. Replace examples by your specific paths.
#Required
data_dir = /path/to/databases/alphafold_params
#Required
uniref90_database_path = /path/to/databases/uniref90/uniref90.fasta
#Optional (needed for colabfold_local workflow)
uniref90_mmseqs_database_path = /path/to/databases/uniref90/uniref90
#Required
uniref30_database_path = /path/to/databases/uniref30_2021_03/uniref30_2021_03_db
#Optional (needed for colabfold_local workflow)
uniref30_mmseqs_database_path = /path/to/databases/uniref30_2202/uniref30_2202_db
#Optional (needed for colabfold_local workflow)
colabfold_envdb_database_path = /path/to/databases/colabfold_envdb_202108/colabfold_envdb_202108_db
#Required
mgnify_database_path = /path/to/databases/mgnify/mgy_clusters.fa
#Required
bfd_database_path = /path/to/databases/bfd/bfd_metaclust_clu_complete_id30_c90_final_seq.sorted_opt
#Required
small_bfd_database_path = /path/to/databases/genetic_databases/small_bfd/bfd-first_non_consensus_sequences.fasta
#Required
uniprot_database_path = /path/to/databases/uniprot/uniprot.fasta
#Optional (needed for colabfold_local workflow)
uniprot_mmseqs_database_path = /path/to/databases/uniprot/uniprot
#Required
pdb70_database_path = /path/to/databases/pdb70/pdb70
#Required
pdb_seqres_database_path = /path/to/databases/pdb_seqres/pdb_seqres.txt
#Required
template_mmcif_dir = /path/to/databases/pdb_mmcif/mmcif_files
#Required
obsolete_pdbs_path = /path/to/databases/pdb_mmcif/obsolete.dat

[BINARIES]
#Path to other binaries required by AlphaFold. The tools can be found in the bin directory of conda environment.
#Replace examples with your local path to the af-conda env or simply put the name of the binary.
jackhmmer_binary_path = /path/to/af-conda/bin/jackhmmer
hhblits_binary_path = /path/to/af-conda/bin/hhblits
hhsearch_binary_path = /path/to/af-condabin/hhsearch
hmmsearch_binary_path = /path/to/af-conda/bin/hmmsearch
hmmbuild_binary_path = /path/to/af-conda/bin/hmmbuild
hhalign_binary_path = /path/to/af-conda/bin/binhhalign
kalign_binary_path = /path/to/af-conda/bin/kalign
mmseqs_binary_path = /path/to/af-conda/bin/mmseqs

[OTHER]
#Automatically load this config file on first start of the software and store parameters in the database.
global_config = True
#Define a custom tempdir for AlphaFold. Some MSA searches can generate large temporary files that might exceed
#the available space of the standard /tmp dir.
custom_tempdir = /tmp
#Use GPU for Amber minimization step.
use_gpu_relax = True
#Lock changing of settings in the GUI for users. If set to True the settings dialog cannot be opened in the GUI and a message
# is shown that the settings are locked by the administrator. The files of the GUIFold installation should then
#be set read-only for non-administrator users. Settings will updated from this file on each startup of the GUI.
lock_settings = True
#On each startup of the GUI, user settings are overwritten from the global config file
force_update = True